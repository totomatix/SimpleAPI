# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
        ConnectionStrings__DefaultConnection: "server=127.0.0.1;port=5432;database=bookstoreDB;uid=postgres;pwd=postgres"
        ASPNETCORE_ENVIRONMENT: CI
    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: bookstoreDB

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    steps:
    - name: Create database
      run: |
       PGPASSWORD=postgres psql -U postgres -h 127.0.0.1 -p 5432 -d bookstoreDB -tc "BEGIN;
        CREATE TABLE IF NOT EXISTS public.book
        (
            id integer NOT NULL,
            isbn character varying(100) NOT NULL,
            titre character varying(100) NOT NULL,
            description character varying(512),
            PRIMARY KEY (id),
            UNIQUE (isbn)
        );
        
        CREATE TABLE IF NOT EXISTS public.author
        (
            id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
            firstname character varying(100) NOT NULL,
            name character varying(100) NOT NULL,
            PRIMARY KEY (id)
        );
        
        CREATE TABLE IF NOT EXISTS public.author_book
        (
            idauthor integer,
            idbook integer,
            PRIMARY KEY (idauthor, idbook)
        );
        
        ALTER TABLE IF EXISTS public.author_book
            ADD FOREIGN KEY (idauthor)
            REFERENCES public.author (id) MATCH SIMPLE
            ON UPDATE NO ACTION
            ON DELETE NO ACTION
            NOT VALID;
        
        
        ALTER TABLE IF EXISTS public.author_book
            ADD FOREIGN KEY (idbook)
            REFERENCES public.book (id) MATCH SIMPLE
            ON UPDATE NO ACTION
            ON DELETE NO ACTION
            NOT VALID;
        
        INSERT INTO public.book
        (id, isbn, titre, description)
        VALUES(1, '12345678', 'Harry Potter 1', 'Le magicien');
        
        END;"
        
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
